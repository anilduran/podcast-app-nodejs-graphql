type Query {
    users: [User!]!
    podcasts: [Podcast!]!
    podcastLists: [PodcastList!]!
    categories: [Category!]!
    me: User!
}

type Mutation {
    signIn(data: SignInInput!): String
    signUp(data: SignUpInput!): String

    createUser(data: CreateUserInput!): User!
    updateUser(id: ID!, data: UpdateUserInput): User!
    deleteUser(id: ID!): User!

    createPodcast(data: CreatePodcastInput!): Podcast!
    updatePodcast(id: ID!, data: UpdatePodcastInput!): Podcast!
    deletePodcast(id: ID!): Podcast!

    createPodcastList(data: CreatePodcastListInput): PodcastList!
    updatePodcastList(id: ID!, data: UpdatePodcastListInput!): PodcastList!
    deletePodcastList(id: ID!): PodcastList!

    createPlaylist(data: CreatePlaylistInput!): Playlist!
    updatePlaylist(id: ID!, data: UpdatePlaylistInput!): Playlist!
    deletePlaylist(id: ID!): Playlist!
    addPodcastToPlaylist(playlist: ID!, podcast: ID!): Podcast!
    removePodcastFromPlaylist(playlist: ID!, podcast: ID!): Podcast!

    createCategory(data: CreateCategoryInput!): Category!
    updateCategory(id: ID!, data: UpdateCategoryInput!): Category!
    deleteCategory(id: ID!): Category!

}

scalar Date

type User {
    id: ID!
    username: String!
    email: String!
    password: String!
    profilePhotoUrl: String
    podcastLists: [PodcastList!]!
    podcasts: [Podcast!]!
    playlists: [Playlist!]!
    isDeleted: Boolean!
    createdAt: Date!
    updatedAt: Date!
    deletedAt: Date    
}

type Podcast {
    id: ID!
    name: String!
    description: String
    imageUrl: String!
    podcastUrl: String!
    creator: User!
    isVisible: Boolean!
    isDeleted: Boolean!
    createdAt: Date!
    updatedAt: Date!
    deletedAt: Date
}

type PodcastList {
    id: ID!
    name: String!
    description: String
    imageUrl: String!
    creator: User!
    podcasts: [Podcast!]!
    categories: [Category!]!
    isVisible: Boolean!
    isDeleted: Boolean!
    createdAt: Date!
    updatedAt: Date!
    deletedAt: Date
}

type Playlist {
    id: ID!
    name: String!
    description: String
    imageUrl: String!
    creator: User
    podcasts: [Podcast!]!
    isDeleted: Boolean!
    createdAt: Date!
    updatedAt: Date!
    deletedAt: Date
}

type Category {
    id: ID!
    name: String!
    description: String
}


input CreateUserInput {
    username: String!
    email: String!
    password: String!
    profilePhotoUrl: String
}

input UpdateUserInput {
    username: String
    email: String
    password: String
    profilePhotoUrl: String
}

input CreatePodcastInput {
    name: String!
    description: String!
    imageUrl: String!
    podcastUrl: String!
    isVisible: Boolean!
}

input UpdatePodcastInput {
    name: String
    description: String
    imageUrl: String
    podcastUrl: String
    isVisible: Boolean!
}

input CreatePodcastListInput {
    name: String!
    description: String
    imageUrl: String!
    isVisible: Boolean!
}

input UpdatePodcastListInput {
    name: String
    description: String
    imageUrl: String
    isVisible: Boolean!
}

input CreateCategoryInput {
    name: String!
    description: String!
}

input UpdateCategoryInput {
    name: String
    description: String
}

input SignInInput {
    email: String!
    password: String!
}

input SignUpInput {
    username: String!
    email: String!
    password: String!
}

input CreatePlaylistInput {
    name: String!
    description: String
    imageUrl: String!
}

input UpdatePlaylistInput {
    name: String
    description: String
    imageUrl: String
}

